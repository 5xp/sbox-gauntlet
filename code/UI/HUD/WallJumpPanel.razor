@namespace Gauntlet.UI
@using Gauntlet.Utils
@inherits Panel

<root class="pk @( Compact ? "compact" : "regular" )">
	<div class="text-container @GetSpeedDiffClass()">
		@if ( ShowSpeedDiff )
		{
			<span class="speed">@GetSpeedDiffString()</span>
		}

		@if ( ShowTime )
		{
			<span class="time small @GetSpeedDiffClass( true )">@( (Time * 1000).ToString( "F0" ) )ms</span>
		}

		@if ( ShowCrouchKicks && IsCrouchKick )
		{
			<span class="crouch-kick small">CK</span>
		}
	</div>
</root>

@code {
	public bool Compact { get; set; }
	public float SpeedDiff { get; set; }
	public bool IsPerfect { get; set; }
	public bool IsCrouchKick { get; set; }
	public float Time { get; set; }
	private bool ShowSpeedDiff { get; set; } = true;
	private bool ShowTime { get; set; } = true;
	private bool ShowCrouchKicks { get; set; } = true;

	private string GetSpeedDiffClass( bool perfectOverridesNegative = false )
	{
		string classString = "";

		if ( IsPerfect && (perfectOverridesNegative || SpeedDiff > 0) )
		{
			classString += "perfect ";
		}

		switch ( SpeedDiff )
		{
			case > 0:
				classString += "gain";
				break;
			case < 0:
				classString += "loss";
				break;
		}

		return classString;
	}

	private string GetSpeedDiffString()
	{
		string speedDiffString = "";

		if ( SpeedDiff > 0 )
		{
			speedDiffString += "+";
		}

		speedDiffString += Common.HupsToKph( SpeedDiff ).ToString( "F1" );

		return speedDiffString;
	}

}
