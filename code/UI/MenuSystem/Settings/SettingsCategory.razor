@namespace Gauntlet.UI
@inherits Panel

<root class="layout column settings-category">
  <div class="settings settings-control category__title text backdrop @(Collapsed ? "collapsed" : "expanded")"
    @ref=CategoryPanel onclick=@ToggleCollapsed>
    <div class="bg"></div>
    <div class="bg"></div>
    @Title
  </div>
  <div class="layout column category__content @(Collapsed ? "collapsed" : "expanded")" @ref=ContentPanel>
    @ChildContent
  </div>
</root>

@code {
  public string Title { get; set; }
  private bool Collapsed { get; set; } = false;
  private Panel CategoryPanel { get; set; }
  private Panel ContentPanel { get; set; }
  private float ScrollSpeedFraction { get; set; }
  private float? ContentHeight { get; set; }

  private void ToggleCollapsed()
  {
    Collapsed = !Collapsed;

    if (Collapsed)
    {
      ContentPanel.Style.MaxHeight = Length.Pixels(0f);
    }
    else
    {
      ContentPanel.Style.MaxHeight = Length.Pixels(ContentHeight.Value);
    }
  }

  public override void Tick()
  {
    ScrollSpeedFraction = ScrollSpeedFraction.Approach(Collapsed ? 0f : 1f, 3f * Time.Delta);

    if (CategoryPanel is null)
    {
      return;
    }

    if (ContentHeight is null && !Collapsed)
    {
      var height = ContentPanel.Box.RectInner.Size.y * ScaleFromScreen;

      if (height > 0f)
      {
        ContentHeight = height;

        ContentPanel.Style.MaxHeight = Length.Pixels(height);
      }
    }

    var backgroundPanels = CategoryPanel.Children.Where(c => c.HasClass("bg")).ToList();

    foreach (var panel in backgroundPanels)
    {
      Length? pos = panel.Style.BackgroundPositionX ?? Length.Percent(0f);
      pos = Length.Percent(pos.Value.Value + Time.Delta * ScrollSpeedFraction);
      panel.Style.BackgroundPositionX = pos;
      panel.Style.BackgroundPositionY = pos;
    }
  }
}